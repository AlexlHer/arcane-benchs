name: Build/Tests GCC-11

on:
  push:
    branches: [ main, dev/cea ]
  pull_request:
    branches: [ main, dev/cea ]
  # A executer que lorsque l'on demande.
  workflow_dispatch:

env:

  QS_BUILD_TYPE: Release
  QS_BUILD_DIR: '/__w/arcane-benchs/arcane-benchs/qs_build'
  QS_SOURCE_DIR: '/__w/arcane-benchs/arcane-benchs/qs'
  CM_BUILD_OPTS: "-j2"


jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/arcaneframework/arcane-spack-ubuntu20.04:main-20220518
      options: --user root
    strategy:
      fail-fast: true
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ${{ env.QS_SOURCE_DIR }}

      - name: Env
        shell: bash
        run: |
          . /spack/share/spack/setup-env.sh
          spack load arcane
          spack load cmake
          spack find --format "{prefix}" arcane
          spack find --format "{prefix}" cmake

      - name: Configure
        shell: bash
        run: |
          . /spack/share/spack/setup-env.sh
          spack load arcane
          spack load cmake
          export ARCANE_INSTALL_PATH=`spack find --format "{prefix}" arcane`
          cmake -S ${{ env.QS_SOURCE_DIR }}/quicksilver -B ${{ env.QS_BUILD_DIR }} -DCMAKE_PREFIX_PATH=${ARCANE_INSTALL_PATH} -DCMAKE_BUILD_TYPE=${QS_BUILD_TYPE}

      - name: Build
        shell: bash
        run: |
          . /spack/share/spack/setup-env.sh
          spack load cmake
          cmake --build ${{ env.QS_BUILD_DIR }} -- ${{ env.CM_BUILD_OPTS }}

      - name: Test
        shell: bash
        run: ${{ env.QS_BUILD_DIR }}/src/Quicksilver -A,T=2 ${{ env.QS_SOURCE_DIR }}/quicksilver/data/ExampleFull.arc
